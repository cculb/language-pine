'.source.pine':
    'Variable':
        'prefix': 'var'
        'body': 'var ${1:name}: ${2:expression}'
    'Constant':
        'prefix': 'let'
        'body': 'let ${1:name}: ${2:expression}'
    'Constructor':
        'prefix': 'def'
        'body': 'def ${1:name}(${2:parameter}):\n\t${3:statements}'
    'Function':
        'prefix': 'func'
        'body': 'def ${1:name}(${2:parameter}):\n\t${3:statements}'
    'Class':
        'prefix': 'class'
        'body': 'class ${1:name}:\n\tdef ${2:name}(${3:parameter}):\n\t${4:statements}'
    'If':
        'prefix': 'if'
        'body': 'if ${1:condition}:\n\t${2:statements}'
    'Else-if':
        'prefix': 'else if'
        'body': 'else if ${1:condition}:\n\t${2:statements}'
    'Else':
        'prefix': 'else'
        'body': 'else:\n\t${1:statements}'
    'For':
        'prefix': 'for'
        'body': 'for ${1:elements} in ${2: collection}:\n\t${3:statements}'
    'While':
        'prefix': 'while'
        'body': 'while ${1:condition}:\n\t${2:statements}'
    'Do-while':
        'prefix': 'do'
        'body': 'do:\n\t${1:statements}\nwhile ${2:condition}'
    'Switch':
        'prefix': 'switch'
        'body': 'switch ${1:variable}:\n\tcase ${2:condition}:\n\t\tstatements\n\n\tdefault:\n\t\tstatements'
    'Case':
        'prefix': 'case'
        'body': 'case ${1:condition}:\n\t\tstatements'
    'Try-catch':
        'prefix': 'try'
        'body': 'try:\n\t${1:statements}\ncatch ${2:exception}:\n\tstatements'
    'Finally':
        'prefix': 'finally'
        'body': 'finally:\n\t${1:statements}'
